PyCon Talks
###########
:date: 2008-03-21 16:11
:author: Ian Bicking
:tags: Programming, Python

I gave my talk at `PyCon <http://us.pycon.org/2008/about />`_ this year on HTML processing in Python.  It seemed to be well received, but I did see some comments on the web from people who wanted more technical content.  The presentation I ended up giving was really more about HTML and its place and advantages compared with XML and XHTML.  Basically I decided to talk about *why* you want to process HTML, instead of getting too much into *how*.  I talked a *little bit* about how, but if you had hoped to hear much technical substance then certainly it would have been disappointing.  (As to the slide question, I will get them up, but I want to assemble at least a little of the material that motivated it, since slides alone aren't that useful.)

I'm not sure what to do for talks like these.  In 30 minutes it is hard to go into much depth about a subject.  And I'm not sure what the purpose would be.  If you want to learn to use a tool you should read the documentation, sit down with a computer, and give it a try.  You certainly shouldn't come to a talk.  So I've tried to avoid the technical details, and instead try to make people *want* to learn the "how" on their own.  This was the goal of my `WSGI talk <https://ianbicking.org/docs/wsgi-presentation/img0.html>`_ last year as well.

That said, the whole talk format was unsatisfying to me at PyCon. Lightning Talks are great (or at least, *can* be great -- and I thought on Sunday when all the sponsors were gone, they *were* great).  But 30 minute is too much time for just presenting an idea, and too little time (and a poor format) for presenting advanced content.  And that slides are built into the format just makes it worse.

I wish the `Open Spaces <http://en.wikipedia.org/wiki/Open_Space_Technology>`_ had been more functional at PyCon.  I couldn't find the ones I wanted and felt conflicted between them and talks (in retrospect of course there shouldn't have been conflict).  I didn't have a single successful Open Space experience this year, despite trying a couple times.

While the organization of Open Spaces could be improved, I don't think Just In Time Planning is going to work at PyCon.  And I don't think Open Spaces *have* to be JIT.  What makes them most interesting isn't that they are totally ad hoc, but that they aren't just one person talking to a bunch of other people.  I'd have been very happy to lead some more extensive "talk" about HTML and XML processing in Python, probably starting out with 10-15 minutes of introduction and survey and then going completely to discussion, Q/A, or wherever the attendees wanted to take it.  I would expect a smaller group of people (I guess), as it would be a larger time commitment and attendance would feel less casual than just showing up at a normal talk.  Maybe it could be clearly setup so that it was something like 10-15 minutes of introduction, 30-35 minutes of talking, and then a clearly planned structure for people to stop talking (moving on to another topic) or stick around to talk more in a smaller and more intimate space and group.  Figuring out *where* to continue the discussion should not be left until the moment everyone has to choose whether to stay or leave.  You'd have to be careful not to let it degenerate into people just asking questions of only personal interest.  I'm pretty comfortable generalizing people's overly specific questions.  People who are less comfortable doing that might benefit from a moderator to help them guide the discussion.

This format seems like *much* less work for me as a speaker (and the stress of speaking greatly infringes on my enjoyment of the conference), it seems more likely to fit the interests of the attendees, and I think it can provide benefit for a much wider range of interests and experience levels.

Anyway, an idea.  I'm not sure how things *should* be structured at PyCon next year, but I'm pretty sure the current talk format isn't it.  A few talks, sure: The State Of X talks can work well, as do talks about ideas and experience instead of talks about tools and libraries.  But I think one track could be sufficient.
